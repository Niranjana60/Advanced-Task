{
	"info": {
		"_postman_id": "e4a537df-3164-4781-8954-79d9a1601c42",
		"name": "Industry Connect Advanced Task",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19348394"
	},
	"item": [
		{
			"name": "Regres",
			"item": [
				{
					"name": "GET Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Single user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/185",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"185"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "RegresPutSample",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"roy\");\r",
									"\r",
									"\r",
									"    pm.test(\"Body matches string\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
									"    });\r",
									"\r",
									"    pm.test(\"Status code name has string\", function () {\r",
									"        pm.response.to.have.status(\"OK\");\r",
									"    });\r",
									"    \r",
									"pm.test(\"verify Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,202]);\r",
									"});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"saira\",\r\n    \"last_name\": \"roy\"\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/866",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"866"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code name has string OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/delete/334",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"delete",
								"334"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Preet\",\r\n    \"last_name\": \"sen\"\r\n   \r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "All Get Requests",
			"item": [
				{
					"name": "Dog Api",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify that Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"verify that status code is 200\",function(){pm.response.to.have.status(200)});\r",
									"\r",
									"pm.test(\"verify that status code has string ok\",function(){pm.response.to.have.status(\"OK\")}\r",
									")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://dog.ceo/dog-api/",
							"protocol": "https",
							"host": [
								"dog",
								"ceo"
							],
							"path": [
								"dog-api",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Jsontest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://ip.jsontest.com/",
							"protocol": "https",
							"host": [
								"ip",
								"jsontest",
								"com"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Country Related",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Reddit",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Key value Json test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify that status code is 200\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"verify that response time is less than 200 ms\",function{\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://echo.jsontest.com/insert-key-here/insert-value-here/key/value",
							"protocol": "http",
							"host": [
								"echo",
								"jsontest",
								"com"
							],
							"path": [
								"insert-key-here",
								"insert-value-here",
								"key",
								"value"
							]
						}
					},
					"response": []
				},
				{
					"name": "Date jsontest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code to have status code 200\",function(){\r",
									"    pm.expect(pm.response.to.have.status(200));\r",
									"});\r",
									"pm.test(\"verify that response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://date.jsontest.com/",
							"protocol": "http",
							"host": [
								"date",
								"jsontest",
								"com"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Jsontest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"verify that response time is less than 200ms\",function(){\r",
									"    (pm.expect(pm.response.responseTime)).to.be.below(200);\r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://validate.jsontest.com/?json=%5BJSON-code-to-validate%5D",
							"protocol": "http",
							"host": [
								"validate",
								"jsontest",
								"com"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "json",
									"value": "%5BJSON-code-to-validate%5D"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "RedditJavaScript",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Verify thatResponse time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code name has string OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"console.log(response)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.reddit.com/r/javascript.json?utm_source=reddit&utm_medium=usertext&utm_name=javascript&utm_content=t1_drb3cdb",
							"protocol": "https",
							"host": [
								"www",
								"reddit",
								"com"
							],
							"path": [
								"r",
								"javascript.json"
							],
							"query": [
								{
									"key": "utm_source",
									"value": "reddit"
								},
								{
									"key": "utm_medium",
									"value": "usertext"
								},
								{
									"key": "utm_name",
									"value": "javascript"
								},
								{
									"key": "utm_content",
									"value": "t1_drb3cdb"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "JsonTestKeyValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that Response time is less than 200ms\",function()\r",
									"{\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"verify that status code is 200\",function()\r",
									"{\r",
									"pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code name has string OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"const response = pm.response.json();\r",
									"console.log(response)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://echo.jsontest.com/insert-key-here/insert-value-here/key/value",
							"protocol": "http",
							"host": [
								"echo",
								"jsontest",
								"com"
							],
							"path": [
								"insert-key-here",
								"insert-value-here",
								"key",
								"value"
							]
						}
					},
					"response": []
				},
				{
					"name": "ValidateJsonTest",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://validate.jsontest.com/?json=%5BJSON-code-to-validate%5D",
							"protocol": "http",
							"host": [
								"validate",
								"jsontest",
								"com"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "json",
									"value": "%5BJSON-code-to-validate%5D"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ipJsonTest",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "groupktrelatedrestwebservices",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "GroupKtrelatedwebservicestogetandsearchstatesandterritories",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Dummy Rest API",
			"item": [
				{
					"name": "GET Employee Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code name has string OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://dummy.restapiexample.com/api/v1/employees",
							"protocol": "https",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post-Create new record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code name has string OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Successfully! Record has been added\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Sady\",\"salary\":\"123\",\"age\":\"23\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://dummy.restapiexample.com/api/v1/create",
							"protocol": "https",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code name has string OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Successfully! Record has been updated\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Sady\",\"salary\":\"555\",\"age\":\"23\"}"
						},
						"url": {
							"raw": "https://dummy.restapiexample.com/public/api/v1/update/23",
							"protocol": "https",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"public",
								"api",
								"v1",
								"update",
								"23"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code name has string OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Sady\",\"salary\":\"123\",\"age\":\"23\"}"
						},
						"url": {
							"raw": "https://dummy.restapiexample.com/public/api/v1/delete/2",
							"protocol": "https",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"public",
								"api",
								"v1",
								"delete",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Petstoreswagger",
			"item": [
				{
					"name": "Petstoreswagger",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"available\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code name has string OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet/findByStatus?status=available",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "available"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validate Status code name has string OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 6,\r\n  \"petId\": 6,\r\n  \"quantity\": 6,\r\n  \"shipDate\": \"2023-09-18T10:44:59.859Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Swagger PUT Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code name has string OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 8,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"doggie\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 8,\r\n      \"name\": \"doggie bruno\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify thatResponse time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Status code name has string OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/6",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"6"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}